/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.github.walker_tx.esv;

import static io.github.walker_tx.esv.operations.Operations.RequestOperation;

import io.github.walker_tx.esv.models.operations.GetPassageAudioRequest;
import io.github.walker_tx.esv.models.operations.GetPassageAudioRequestBuilder;
import io.github.walker_tx.esv.models.operations.GetPassageAudioResponse;
import io.github.walker_tx.esv.models.operations.GetPassageHtmlRequest;
import io.github.walker_tx.esv.models.operations.GetPassageHtmlRequestBuilder;
import io.github.walker_tx.esv.models.operations.GetPassageHtmlResponse;
import io.github.walker_tx.esv.models.operations.GetPassageTextRequest;
import io.github.walker_tx.esv.models.operations.GetPassageTextRequestBuilder;
import io.github.walker_tx.esv.models.operations.GetPassageTextResponse;
import io.github.walker_tx.esv.models.operations.SearchPassagesRequest;
import io.github.walker_tx.esv.models.operations.SearchPassagesRequestBuilder;
import io.github.walker_tx.esv.models.operations.SearchPassagesResponse;
import io.github.walker_tx.esv.operations.GetPassageAudio;
import io.github.walker_tx.esv.operations.GetPassageHtml;
import io.github.walker_tx.esv.operations.GetPassageText;
import io.github.walker_tx.esv.operations.SearchPassages;
import java.lang.Exception;
import java.lang.String;


public class Passages {
    private final SDKConfiguration sdkConfiguration;

    Passages(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Get Bible passage HTML
     * 
     * <p>Returns Bible passage text with HTML formatting
     * 
     * <p>https://api.esv.org/docs/passage-html/ - Esv.org API Docs for `/v3/passages/html`
     * 
     * @return The call builder
     */
    public GetPassageHtmlRequestBuilder getHtml() {
        return new GetPassageHtmlRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Bible passage HTML
     * 
     * <p>Returns Bible passage text with HTML formatting
     * 
     * <p>https://api.esv.org/docs/passage-html/ - Esv.org API Docs for `/v3/passages/html`
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetPassageHtmlResponse getHtml(GetPassageHtmlRequest request) throws Exception {
        RequestOperation<GetPassageHtmlRequest, GetPassageHtmlResponse> operation
              = new GetPassageHtml.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Search Bible passages
     * 
     * <p>Returns search results for Bible passages based on the provided query
     * 
     * <p>https://api.esv.org/docs/passage-search/ - Esv.org API Docs for `/v3/passage/search`
     * 
     * @return The call builder
     */
    public SearchPassagesRequestBuilder search() {
        return new SearchPassagesRequestBuilder(sdkConfiguration);
    }

    /**
     * Search Bible passages
     * 
     * <p>Returns search results for Bible passages based on the provided query
     * 
     * <p>https://api.esv.org/docs/passage-search/ - Esv.org API Docs for `/v3/passage/search`
     * 
     * @param query The text to search for
     * @param pageSize Number of results to return per page
     * @param page Page number to return
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public SearchPassagesResponse search(
            String query, long pageSize,
            long page) throws Exception {
        SearchPassagesRequest request =
            SearchPassagesRequest
                .builder()
                .query(query)
                .pageSize(pageSize)
                .page(page)
                .build();
        RequestOperation<SearchPassagesRequest, SearchPassagesResponse> operation
              = new SearchPassages.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get Bible passage audio
     * 
     * <p>Returns audio file for Bible passages based on the provided query
     * 
     * <p>https://api.esv.org/docs/passage-audio/ - Esv.org API Docs for `/v3/passage/audio`
     * 
     * @return The call builder
     */
    public GetPassageAudioRequestBuilder getAudio() {
        return new GetPassageAudioRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Bible passage audio
     * 
     * <p>Returns audio file for Bible passages based on the provided query
     * 
     * <p>https://api.esv.org/docs/passage-audio/ - Esv.org API Docs for `/v3/passage/audio`
     * 
     * @param query Bible passage reference (e.g., "John 3:16" or "43011016")
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetPassageAudioResponse getAudio(String query) throws Exception {
        GetPassageAudioRequest request =
            GetPassageAudioRequest
                .builder()
                .query(query)
                .build();
        RequestOperation<GetPassageAudioRequest, GetPassageAudioResponse> operation
              = new GetPassageAudio.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get Bible passage text
     * 
     * <p>Returns Bible passage text based on the provided query parameters
     * 
     * <p>https://api.esv.org/docs/passage-text/ - Esv.org API Docs for `/v3/passages/text`
     * 
     * @return The call builder
     */
    public GetPassageTextRequestBuilder getText() {
        return new GetPassageTextRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Bible passage text
     * 
     * <p>Returns Bible passage text based on the provided query parameters
     * 
     * <p>https://api.esv.org/docs/passage-text/ - Esv.org API Docs for `/v3/passages/text`
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetPassageTextResponse getText(GetPassageTextRequest request) throws Exception {
        RequestOperation<GetPassageTextRequest, GetPassageTextResponse> operation
              = new GetPassageText.Sync(sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
