/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.github.walker_tx.esv.models.operations.async;

import static io.github.walker_tx.esv.operations.Operations.AsyncRequestOperation;

import io.github.walker_tx.esv.SDKConfiguration;
import io.github.walker_tx.esv.models.operations.GetPassageTextRequest;
import io.github.walker_tx.esv.operations.GetPassageText;
import io.github.walker_tx.esv.utils.Utils;
import java.lang.Exception;
import java.util.concurrent.CompletableFuture;

public class GetPassageTextRequestBuilder {

    private GetPassageTextRequest request;
    private final SDKConfiguration sdkConfiguration;

    public GetPassageTextRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public GetPassageTextRequestBuilder request(GetPassageTextRequest request) {
        Utils.checkNotNull(request, "request");
        this.request = request;
        return this;
    }

    public CompletableFuture<GetPassageTextResponse> call() throws Exception {
        
        AsyncRequestOperation<GetPassageTextRequest, GetPassageTextResponse> operation
              = new GetPassageText.Async(sdkConfiguration);

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
