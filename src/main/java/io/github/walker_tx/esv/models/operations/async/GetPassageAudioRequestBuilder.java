/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package io.github.walker_tx.esv.models.operations.async;

import static io.github.walker_tx.esv.operations.Operations.AsyncRequestOperation;

import io.github.walker_tx.esv.SDKConfiguration;
import io.github.walker_tx.esv.models.operations.GetPassageAudioRequest;
import io.github.walker_tx.esv.operations.GetPassageAudio;
import io.github.walker_tx.esv.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.concurrent.CompletableFuture;

public class GetPassageAudioRequestBuilder {

    private String query;
    private final SDKConfiguration sdkConfiguration;

    public GetPassageAudioRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public GetPassageAudioRequestBuilder query(String query) {
        Utils.checkNotNull(query, "query");
        this.query = query;
        return this;
    }


    private GetPassageAudioRequest buildRequest() {

        GetPassageAudioRequest request = new GetPassageAudioRequest(query);

        return request;
    }

    public CompletableFuture<GetPassageAudioResponse> call() throws Exception {
        
        AsyncRequestOperation<GetPassageAudioRequest, GetPassageAudioResponse> operation
              = new GetPassageAudio.Async(sdkConfiguration);
        GetPassageAudioRequest request = buildRequest();

        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }
}
