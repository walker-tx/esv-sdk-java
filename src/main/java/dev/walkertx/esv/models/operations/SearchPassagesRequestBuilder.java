/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package dev.walkertx.esv.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import dev.walkertx.esv.models.errors.APIException;
import dev.walkertx.esv.utils.LazySingletonValue;
import dev.walkertx.esv.utils.Utils;
import java.lang.Long;
import java.lang.String;
import java.util.Optional;
import java.util.stream.Stream;

public class SearchPassagesRequestBuilder {

    private String query;
    private Long pageSize;
    private Long page;
    private final SDKMethodInterfaces.MethodCallSearchPassages sdk;

    public SearchPassagesRequestBuilder(SDKMethodInterfaces.MethodCallSearchPassages sdk) {
        this.sdk = sdk;
    }

    public SearchPassagesRequestBuilder query(String query) {
        Utils.checkNotNull(query, "query");
        this.query = query;
        return this;
    }

    public SearchPassagesRequestBuilder pageSize(long pageSize) {
        Utils.checkNotNull(pageSize, "pageSize");
        this.pageSize = pageSize;
        return this;
    }

    public SearchPassagesRequestBuilder page(long page) {
        Utils.checkNotNull(page, "page");
        this.page = page;
        return this;
    }

    public SearchPassagesResponse call() throws Exception {
        if (pageSize == null) {
            pageSize = _SINGLETON_VALUE_PageSize.value();
        }
        if (page == null) {
            page = _SINGLETON_VALUE_Page.value();
        }
        return sdk.search(
            query,
            pageSize,
            page);
    }
    
    /**
     * Returns a stream that performs next page calls till no more pages
     * are returned. Unlike the {@link #call()} method this method will
     * throw an {@link APIException} if any page retrieval has an HTTP status 
     * code >= 300 (Note that 3XX is not an error range but will need 
     * special handling by the user if for example the HTTP client is 
     * not configured to follow redirects).
     * 
     * @throws {@link APIException} if HTTP status code >= 300 is encountered
     **/  
    public Stream<SearchPassagesResponse> callAsStream() {
        return Utils.stream(() -> Optional.of(call()), x -> {
            if (x.statusCode() >= 300) {
                byte[] body = Utils.toByteArrayAndClose(x.rawResponse().body());
                throw new APIException(x.rawResponse(), x.statusCode(), x.contentType(), body);
            } else {
                return x.next();
            }
        });
    }

    private static final LazySingletonValue<Long> _SINGLETON_VALUE_PageSize =
            new LazySingletonValue<>(
                    "pageSize",
                    "20",
                    new TypeReference<Long>() {});

    private static final LazySingletonValue<Long> _SINGLETON_VALUE_Page =
            new LazySingletonValue<>(
                    "page",
                    "1",
                    new TypeReference<Long>() {});
}
